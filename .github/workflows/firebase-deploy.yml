name: Deploy to Firebase

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'functions/package-lock.json'

      - name: Install dependencies
        run: |
          cd functions
          npm ci

      - name: Run linter
        run: |
          cd functions
          npm run lint

      - name: Run tests
        run: |
          cd functions
          npm test || true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'functions/package-lock.json'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install function dependencies
        run: |
          cd functions
          npm ci

      - name: Build functions
        run: |
          cd functions
          npm run build

      - name: Deploy to Firebase (Hosting)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase deploy --only hosting --token "$FIREBASE_TOKEN" --project sirsi-nexus-live

      - name: Deploy to Firebase (Firestore Rules)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase deploy --only firestore:rules --token "$FIREBASE_TOKEN" --project sirsi-nexus-live

      - name: Deploy to Firebase (Functions)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase deploy --only functions --token "$FIREBASE_TOKEN" --project sirsi-nexus-live

      - name: Test deployment
        run: |
          curl -f https://sirsi-ai.web.app || exit 1
          curl -f https://healthcheck-6kdf4or4qq-uc.a.run.app || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "🌐 Live at: https://sirsi-ai.web.app"
          echo "📊 Console: https://console.firebase.google.com/project/sirsi-nexus-live"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "Check the logs above for errors."

  preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'functions/package-lock.json'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install function dependencies
        run: |
          cd functions
          npm ci

      - name: Build functions
        run: |
          cd functions
          npm run build

      - name: Deploy preview channel
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        id: deploy_preview
        run: |
          CHANNEL="pr-${{ github.event.pull_request.number }}"
          firebase hosting:channel:deploy $CHANNEL --expires 7d --token "$FIREBASE_TOKEN" --project sirsi-nexus-live > deploy_output.txt
          PREVIEW_URL=$(grep -o 'https://[^[:space:]]*--pr-[^[:space:]]*web.app' deploy_output.txt | head -1)
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Comment PR with preview URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const preview_url = '${{ steps.deploy_preview.outputs.preview_url }}';
            const body = `🚀 **Preview deployment ready!**\n\n🔗 Preview URL: ${preview_url}\n\n⏰ This preview will expire in 7 days.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
